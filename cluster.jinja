#{% set NAME_PREFIX = env['deployment'] + '-' + env['name'] %}
#{% set CLUSTER_NAME = NAME_PREFIX %}
#{% set TYPE_NAME = NAME_PREFIX + '-type' %}

properties:
  nodePool.initial_node_count:
    type: integer
    description: Initial number of nodes desired in the cluster.
    default: 3
  location:
    type: string
    description: Zone in which the cluster should run.
    default: us-east1-b
  subnetwork: 
    type: string
    description: The name of the GCE subnetwork to which the cluster is connected.
  network:
    type: string
    description: The name of the GCE network to which the cluster is connected.
    default: default




resources:
- name: {{ Cluster_Cloud  }}
  type: gcp-types/container-v1:projects.zones.clusters
  properties:
    cluster:
      name: {{ Cluster_Cloud }}
      initialNodeCount: {{ properties.nodePool.initial_node_count }}
      location: {{ properties.location  }}
      network: {{ properties.network  }}
#      subnetwork: {{ properties.subnetwork  }}
      nodeConfig:
        oauthScopes:
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.read_only
        - https://www.googleapis.com/auth/logging.write
        - https://www.googleapis.com/auth/monitoring

- name: {{ TYPE_NAME }}
  type: deploymentmanager.v2beta.typeProvider
  properties:
    options:
      validationOptions:
        # Kubernetes API accepts ints, in fields they annotate with string.
        # This validation will show as warning rather than failure for
        # Deployment Manager.
        # https://github.com/kubernetes/kubernetes/issues/2971
        schemaValidation: IGNORE_WITH_WARNINGS
      # According to kubernetes spec, the path parameter 'name'
      # should be the value inside the metadata field
      # https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md
      # This mapping specifies that
      inputMappings:
      - fieldName: name
        location: PATH
        methodMatch: ^(GET|DELETE|PUT|POST|PATCH)$
        value: $.ifNull($.resource.properties.metadata.name, $.resource.name)
      - fieldName: metadata.name
        location: BODY
        methodMatch: ^(PUT|POST)$
        value: $.ifNull($.resource.properties.metadata.name, $.resource.name)
      - fieldName: Authorization
        location: HEADER
        value: >
          $.concat("Bearer ", $.googleOauth2AccessToken())
      - fieldName: metadata.resourceVersion
        location: BODY
        methodMatch: ^(PUT|PATCH)$
        value: $.resource.self.metadata.resourceVersion
      - fieldName: id
        location: PATH
        methodMatch: ^(GET|DELETE|PUT|POST|PATCH)$
        value: $.resource.properties.id
      - fieldName: namespace
        location: PATH
        methodMatch: ^(GET|DELETE|PUT|POST|PATCH)$
        value: $.resource.properties.namespace
    descriptorUrl: https://$(ref.{{ Cluster_Cloud }}.endpoint)/openapi/v2